generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cliente {
  id_cliente Int @id @default(autoincrement())

  nombre   String  @db.VarChar(100)
  email    String? @unique @db.VarChar(100)
  telefono String? @db.VarChar(15)

  estado_auditoria    String?   @default("1") @db.Char(1) /* ðŸ”˜ */
  fecha_creacion      DateTime? @default(now()) @db.Timestamp(6) /* ðŸ”˜ */
  fecha_actualizacion DateTime? @db.Timestamp(6) /* ðŸ”˜ */
  venta               venta[]
}

model proveedor {
  id_proveedor Int @id @default(autoincrement())

  nombre   String  @db.VarChar(100)
  contacto String? @db.VarChar(50)
  telefono String? @db.VarChar(20)
  email    String? @db.VarChar(100)

  estado_auditoria    String?   @default("1") @db.Char(1) /* ðŸ”˜ */
  fecha_creacion      DateTime? @default(now()) @db.Timestamp(6) /* ðŸ”˜ */
  fecha_actualizacion DateTime? @db.Timestamp(6) /* ðŸ”˜ */

  producto producto[]
}

model producto {
  id_producto Int @id @default(autoincrement())

  nombre      String  @db.VarChar(100)
  descripcion String?
  precio      Decimal @db.Decimal(10, 2)

  id_proveedor Int?

  estado_auditoria    String?   @default("1") @db.Char(1) /* ðŸ”˜ */
  fecha_creacion      DateTime? @default(now()) @db.Timestamp(6) /* ðŸ”˜ */
  fecha_actualizacion DateTime? @db.Timestamp(6) /* ðŸ”˜ */

  proveedor     proveedor?      @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: SetNull, map: "fk_producto_proveedor")
  inventario    inventario?
  detalle_venta detalle_venta[]
}

model inventario {
  id_producto Int @id

  stock               Int
  estado_auditoria    String?   @default("1") @db.Char(1) /* ðŸ”˜ */
  fecha_creacion      DateTime? @default(now()) @db.Timestamp(6) /* ðŸ”˜ */
  fecha_actualizacion DateTime? @db.Timestamp(6) /* ðŸ”˜ */

  producto producto @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade, map: "fk_inventario_producto")
}

model venta {
  id_venta Int @id @default(autoincrement())

  id_cliente Int?
  total      Decimal? @db.Decimal(10, 2)

  estado_auditoria    String?   @default("1") @db.Char(1) /* ðŸ”˜ */
  fecha_creacion      DateTime? @default(now()) @db.Timestamp(6) /* ðŸ”˜ */
  fecha_actualizacion DateTime? @db.Timestamp(6) /* ðŸ”˜ */

  cliente       cliente?        @relation(fields: [id_cliente], references: [id_cliente], onDelete: SetNull, map: "fk_venta_cliente")
  detalle_venta detalle_venta[]
}

model detalle_venta {
  id_detalle Int @id @default(autoincrement())

  id_venta    Int
  id_producto Int
  cantidad    Int
  subtotal    Decimal @db.Decimal(10, 2)

  estado_auditoria    String?   @default("1") @db.Char(1) /* ðŸ”˜ */
  fecha_creacion      DateTime? @default(now()) @db.Timestamp(6) /* ðŸ”˜ */
  fecha_actualizacion DateTime? @db.Timestamp(6) /* ðŸ”˜ */

  venta    venta    @relation(fields: [id_venta], references: [id_venta], onDelete: Cascade, map: "fk_detalle_venta")
  producto producto @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade, map: "fk_detalle_producto")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  role     String @default("user")
}
